//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace WebViewAndroid.MobileTerminaWS {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="MobileTerminalWSSoap", Namespace="http://tempuri.org/")]
    public partial class MobileTerminalWS : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback HelloWorldOperationCompleted;
        
        private MySoapHeader mySoapHeaderValueField;
        
        private System.Threading.SendOrPostCallback UserLoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHistoryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetMapUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAPKUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNotificationCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserSendMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetMessageStateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetShipForjwdOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchShipOROilAdressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOildepotInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRefineryInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransportationInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYjInfoForclientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYjInfoForIphoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYjInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllYkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProgressAllYkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPlangoodAllYkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetdatielYkOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllYjProgressInfoForVarietytypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetKcYjInfoForIphoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYjWarehouseSaveInfoForEidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCcYjInfoForIphoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYjProgressInfoForEidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYjWarehouseSaveInfoForVarietytypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYjProgressInfoForVarietytypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransportAuditOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitTransportAuditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWaterTranAuditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetHCTranAuditOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitDispatcherAuditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDispatcherAuditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWaterTranConfirmOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitWaterTranConfirmOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWaterTranAlterPortOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitWaterTranAlterPortOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSendGoodstimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitGoodsTimeOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitAuditResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitHCJHAuditResultOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTransportCostReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback CommitTransportCostReceiptOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYJshowcolorInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSendFactoryProgressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSendFactoryProgressforEntOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarehouseSaveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarehouseSaveByVtypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarehouseSaveforSidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOildepotforSidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWarehouseSaveforOiidOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSaleProgressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSaleProgressforOiidOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserCoupleBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddReplyUserFeedBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserCoupleBackOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetEntPlangoodsInfoOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetCcApYjInfoForIphoneOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYjInfoNextForclientOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetYjInfoNextForvtypeclientOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public MobileTerminalWS() {
            this.Url = "http://218.1.27.106:8085/hdwebservice/MobileTerminalWS.asmx";
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public MySoapHeader MySoapHeaderValue {
            get {
                return this.mySoapHeaderValueField;
            }
            set {
                this.mySoapHeaderValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event HelloWorldCompletedEventHandler HelloWorldCompleted;
        
        /// <remarks/>
        public event UserLoginCompletedEventHandler UserLoginCompleted;
        
        /// <remarks/>
        public event GetHistoryCompletedEventHandler GetHistoryCompleted;
        
        /// <remarks/>
        public event GetMapUrlCompletedEventHandler GetMapUrlCompleted;
        
        /// <remarks/>
        public event GetAPKUrlCompletedEventHandler GetAPKUrlCompleted;
        
        /// <remarks/>
        public event GetNotificationCountCompletedEventHandler GetNotificationCountCompleted;
        
        /// <remarks/>
        public event GetUserSendMessageCompletedEventHandler GetUserSendMessageCompleted;
        
        /// <remarks/>
        public event SetMessageStateCompletedEventHandler SetMessageStateCompleted;
        
        /// <remarks/>
        public event GetShipForjwdCompletedEventHandler GetShipForjwdCompleted;
        
        /// <remarks/>
        public event SearchShipOROilAdressCompletedEventHandler SearchShipOROilAdressCompleted;
        
        /// <remarks/>
        public event GetOildepotInfoCompletedEventHandler GetOildepotInfoCompleted;
        
        /// <remarks/>
        public event GetRefineryInfoCompletedEventHandler GetRefineryInfoCompleted;
        
        /// <remarks/>
        public event GetTransportationInfoCompletedEventHandler GetTransportationInfoCompleted;
        
        /// <remarks/>
        public event GetYjInfoForclientCompletedEventHandler GetYjInfoForclientCompleted;
        
        /// <remarks/>
        public event GetYjInfoForIphoneCompletedEventHandler GetYjInfoForIphoneCompleted;
        
        /// <remarks/>
        public event GetYjInfoCompletedEventHandler GetYjInfoCompleted;
        
        /// <remarks/>
        public event GetAllYkCompletedEventHandler GetAllYkCompleted;
        
        /// <remarks/>
        public event GetProgressAllYkCompletedEventHandler GetProgressAllYkCompleted;
        
        /// <remarks/>
        public event GetPlangoodAllYkCompletedEventHandler GetPlangoodAllYkCompleted;
        
        /// <remarks/>
        public event GetdatielYkCompletedEventHandler GetdatielYkCompleted;
        
        /// <remarks/>
        public event GetAllYjProgressInfoForVarietytypeCompletedEventHandler GetAllYjProgressInfoForVarietytypeCompleted;
        
        /// <remarks/>
        public event GetKcYjInfoForIphoneCompletedEventHandler GetKcYjInfoForIphoneCompleted;
        
        /// <remarks/>
        public event GetYjWarehouseSaveInfoForEidCompletedEventHandler GetYjWarehouseSaveInfoForEidCompleted;
        
        /// <remarks/>
        public event GetCcYjInfoForIphoneCompletedEventHandler GetCcYjInfoForIphoneCompleted;
        
        /// <remarks/>
        public event GetYjProgressInfoForEidCompletedEventHandler GetYjProgressInfoForEidCompleted;
        
        /// <remarks/>
        public event GetYjWarehouseSaveInfoForVarietytypeCompletedEventHandler GetYjWarehouseSaveInfoForVarietytypeCompleted;
        
        /// <remarks/>
        public event GetYjProgressInfoForVarietytypeCompletedEventHandler GetYjProgressInfoForVarietytypeCompleted;
        
        /// <remarks/>
        public event GetTransportAuditCompletedEventHandler GetTransportAuditCompleted;
        
        /// <remarks/>
        public event CommitTransportAuditCompletedEventHandler CommitTransportAuditCompleted;
        
        /// <remarks/>
        public event GetWaterTranAuditCompletedEventHandler GetWaterTranAuditCompleted;
        
        /// <remarks/>
        public event GetHCTranAuditCompletedEventHandler GetHCTranAuditCompleted;
        
        /// <remarks/>
        public event CommitDispatcherAuditCompletedEventHandler CommitDispatcherAuditCompleted;
        
        /// <remarks/>
        public event GetDispatcherAuditCompletedEventHandler GetDispatcherAuditCompleted;
        
        /// <remarks/>
        public event GetWaterTranConfirmCompletedEventHandler GetWaterTranConfirmCompleted;
        
        /// <remarks/>
        public event CommitWaterTranConfirmCompletedEventHandler CommitWaterTranConfirmCompleted;
        
        /// <remarks/>
        public event GetWaterTranAlterPortCompletedEventHandler GetWaterTranAlterPortCompleted;
        
        /// <remarks/>
        public event CommitWaterTranAlterPortCompletedEventHandler CommitWaterTranAlterPortCompleted;
        
        /// <remarks/>
        public event GetSendGoodstimeCompletedEventHandler GetSendGoodstimeCompleted;
        
        /// <remarks/>
        public event CommitGoodsTimeCompletedEventHandler CommitGoodsTimeCompleted;
        
        /// <remarks/>
        public event CommitAuditResultCompletedEventHandler CommitAuditResultCompleted;
        
        /// <remarks/>
        public event CommitHCJHAuditResultCompletedEventHandler CommitHCJHAuditResultCompleted;
        
        /// <remarks/>
        public event GetTransportCostReceiptCompletedEventHandler GetTransportCostReceiptCompleted;
        
        /// <remarks/>
        public event CommitTransportCostReceiptCompletedEventHandler CommitTransportCostReceiptCompleted;
        
        /// <remarks/>
        public event GetYJshowcolorInfoCompletedEventHandler GetYJshowcolorInfoCompleted;
        
        /// <remarks/>
        public event GetSendFactoryProgressCompletedEventHandler GetSendFactoryProgressCompleted;
        
        /// <remarks/>
        public event GetSendFactoryProgressforEntCompletedEventHandler GetSendFactoryProgressforEntCompleted;
        
        /// <remarks/>
        public event GetWarehouseSaveCompletedEventHandler GetWarehouseSaveCompleted;
        
        /// <remarks/>
        public event GetWarehouseSaveByVtypeCompletedEventHandler GetWarehouseSaveByVtypeCompleted;
        
        /// <remarks/>
        public event GetWarehouseSaveforSidCompletedEventHandler GetWarehouseSaveforSidCompleted;
        
        /// <remarks/>
        public event GetOildepotforSidCompletedEventHandler GetOildepotforSidCompleted;
        
        /// <remarks/>
        public event GetWarehouseSaveforOiidCompletedEventHandler GetWarehouseSaveforOiidCompleted;
        
        /// <remarks/>
        public event GetSaleProgressCompletedEventHandler GetSaleProgressCompleted;
        
        /// <remarks/>
        public event GetSaleProgressforOiidCompletedEventHandler GetSaleProgressforOiidCompleted;
        
        /// <remarks/>
        public event AddUserCoupleBackCompletedEventHandler AddUserCoupleBackCompleted;
        
        /// <remarks/>
        public event AddReplyUserFeedBackCompletedEventHandler AddReplyUserFeedBackCompleted;
        
        /// <remarks/>
        public event GetUserCoupleBackCompletedEventHandler GetUserCoupleBackCompleted;
        
        /// <remarks/>
        public event GetEntPlangoodsInfoCompletedEventHandler GetEntPlangoodsInfoCompleted;
        
        /// <remarks/>
        public event GetCcApYjInfoForIphoneCompletedEventHandler GetCcApYjInfoForIphoneCompleted;
        
        /// <remarks/>
        public event GetYjInfoNextForclientCompletedEventHandler GetYjInfoNextForclientCompleted;
        
        /// <remarks/>
        public event GetYjInfoNextForvtypeclientCompletedEventHandler GetYjInfoNextForvtypeclientCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/HelloWorld", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string HelloWorld() {
            object[] results = this.Invoke("HelloWorld", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void HelloWorldAsync() {
            this.HelloWorldAsync(null);
        }
        
        /// <remarks/>
        public void HelloWorldAsync(object userState) {
            if ((this.HelloWorldOperationCompleted == null)) {
                this.HelloWorldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnHelloWorldOperationCompleted);
            }
            this.InvokeAsync("HelloWorld", new object[0], this.HelloWorldOperationCompleted, userState);
        }
        
        private void OnHelloWorldOperationCompleted(object arg) {
            if ((this.HelloWorldCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.HelloWorldCompleted(this, new HelloWorldCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UserLogin", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UserLogin(string usern, string passw) {
            object[] results = this.Invoke("UserLogin", new object[] {
                        usern,
                        passw});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UserLoginAsync(string usern, string passw) {
            this.UserLoginAsync(usern, passw, null);
        }
        
        /// <remarks/>
        public void UserLoginAsync(string usern, string passw, object userState) {
            if ((this.UserLoginOperationCompleted == null)) {
                this.UserLoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUserLoginOperationCompleted);
            }
            this.InvokeAsync("UserLogin", new object[] {
                        usern,
                        passw}, this.UserLoginOperationCompleted, userState);
        }
        
        private void OnUserLoginOperationCompleted(object arg) {
            if ((this.UserLoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UserLoginCompleted(this, new UserLoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHistory", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHistory(string shipname, string shipvalue, string startdate, string enddate) {
            object[] results = this.Invoke("GetHistory", new object[] {
                        shipname,
                        shipvalue,
                        startdate,
                        enddate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHistoryAsync(string shipname, string shipvalue, string startdate, string enddate) {
            this.GetHistoryAsync(shipname, shipvalue, startdate, enddate, null);
        }
        
        /// <remarks/>
        public void GetHistoryAsync(string shipname, string shipvalue, string startdate, string enddate, object userState) {
            if ((this.GetHistoryOperationCompleted == null)) {
                this.GetHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHistoryOperationCompleted);
            }
            this.InvokeAsync("GetHistory", new object[] {
                        shipname,
                        shipvalue,
                        startdate,
                        enddate}, this.GetHistoryOperationCompleted, userState);
        }
        
        private void OnGetHistoryOperationCompleted(object arg) {
            if ((this.GetHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHistoryCompleted(this, new GetHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetMapUrl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetMapUrl() {
            object[] results = this.Invoke("GetMapUrl", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetMapUrlAsync() {
            this.GetMapUrlAsync(null);
        }
        
        /// <remarks/>
        public void GetMapUrlAsync(object userState) {
            if ((this.GetMapUrlOperationCompleted == null)) {
                this.GetMapUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetMapUrlOperationCompleted);
            }
            this.InvokeAsync("GetMapUrl", new object[0], this.GetMapUrlOperationCompleted, userState);
        }
        
        private void OnGetMapUrlOperationCompleted(object arg) {
            if ((this.GetMapUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetMapUrlCompleted(this, new GetMapUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAPKUrl", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAPKUrl(string bbh) {
            object[] results = this.Invoke("GetAPKUrl", new object[] {
                        bbh});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAPKUrlAsync(string bbh) {
            this.GetAPKUrlAsync(bbh, null);
        }
        
        /// <remarks/>
        public void GetAPKUrlAsync(string bbh, object userState) {
            if ((this.GetAPKUrlOperationCompleted == null)) {
                this.GetAPKUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAPKUrlOperationCompleted);
            }
            this.InvokeAsync("GetAPKUrl", new object[] {
                        bbh}, this.GetAPKUrlOperationCompleted, userState);
        }
        
        private void OnGetAPKUrlOperationCompleted(object arg) {
            if ((this.GetAPKUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAPKUrlCompleted(this, new GetAPKUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNotificationCount", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNotificationCount(int id) {
            object[] results = this.Invoke("GetNotificationCount", new object[] {
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNotificationCountAsync(int id) {
            this.GetNotificationCountAsync(id, null);
        }
        
        /// <remarks/>
        public void GetNotificationCountAsync(int id, object userState) {
            if ((this.GetNotificationCountOperationCompleted == null)) {
                this.GetNotificationCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNotificationCountOperationCompleted);
            }
            this.InvokeAsync("GetNotificationCount", new object[] {
                        id}, this.GetNotificationCountOperationCompleted, userState);
        }
        
        private void OnGetNotificationCountOperationCompleted(object arg) {
            if ((this.GetNotificationCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNotificationCountCompleted(this, new GetNotificationCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserSendMessage", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserSendMessage(string usern, string usertype, int pageindex, int pagesize) {
            object[] results = this.Invoke("GetUserSendMessage", new object[] {
                        usern,
                        usertype,
                        pageindex,
                        pagesize});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserSendMessageAsync(string usern, string usertype, int pageindex, int pagesize) {
            this.GetUserSendMessageAsync(usern, usertype, pageindex, pagesize, null);
        }
        
        /// <remarks/>
        public void GetUserSendMessageAsync(string usern, string usertype, int pageindex, int pagesize, object userState) {
            if ((this.GetUserSendMessageOperationCompleted == null)) {
                this.GetUserSendMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserSendMessageOperationCompleted);
            }
            this.InvokeAsync("GetUserSendMessage", new object[] {
                        usern,
                        usertype,
                        pageindex,
                        pagesize}, this.GetUserSendMessageOperationCompleted, userState);
        }
        
        private void OnGetUserSendMessageOperationCompleted(object arg) {
            if ((this.GetUserSendMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserSendMessageCompleted(this, new GetUserSendMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetMessageState", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SetMessageState(string[] ids) {
            object[] results = this.Invoke("SetMessageState", new object[] {
                        ids});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SetMessageStateAsync(string[] ids) {
            this.SetMessageStateAsync(ids, null);
        }
        
        /// <remarks/>
        public void SetMessageStateAsync(string[] ids, object userState) {
            if ((this.SetMessageStateOperationCompleted == null)) {
                this.SetMessageStateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetMessageStateOperationCompleted);
            }
            this.InvokeAsync("SetMessageState", new object[] {
                        ids}, this.SetMessageStateOperationCompleted, userState);
        }
        
        private void OnSetMessageStateOperationCompleted(object arg) {
            if ((this.SetMessageStateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetMessageStateCompleted(this, new SetMessageStateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetShipForjwd", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetShipForjwd(string userid, double lng, double lat, double diff) {
            object[] results = this.Invoke("GetShipForjwd", new object[] {
                        userid,
                        lng,
                        lat,
                        diff});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetShipForjwdAsync(string userid, double lng, double lat, double diff) {
            this.GetShipForjwdAsync(userid, lng, lat, diff, null);
        }
        
        /// <remarks/>
        public void GetShipForjwdAsync(string userid, double lng, double lat, double diff, object userState) {
            if ((this.GetShipForjwdOperationCompleted == null)) {
                this.GetShipForjwdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetShipForjwdOperationCompleted);
            }
            this.InvokeAsync("GetShipForjwd", new object[] {
                        userid,
                        lng,
                        lat,
                        diff}, this.GetShipForjwdOperationCompleted, userState);
        }
        
        private void OnGetShipForjwdOperationCompleted(object arg) {
            if ((this.GetShipForjwdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetShipForjwdCompleted(this, new GetShipForjwdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchShipOROilAdress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SearchShipOROilAdress(string userid, string swhere, string searchtype) {
            object[] results = this.Invoke("SearchShipOROilAdress", new object[] {
                        userid,
                        swhere,
                        searchtype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SearchShipOROilAdressAsync(string userid, string swhere, string searchtype) {
            this.SearchShipOROilAdressAsync(userid, swhere, searchtype, null);
        }
        
        /// <remarks/>
        public void SearchShipOROilAdressAsync(string userid, string swhere, string searchtype, object userState) {
            if ((this.SearchShipOROilAdressOperationCompleted == null)) {
                this.SearchShipOROilAdressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchShipOROilAdressOperationCompleted);
            }
            this.InvokeAsync("SearchShipOROilAdress", new object[] {
                        userid,
                        swhere,
                        searchtype}, this.SearchShipOROilAdressOperationCompleted, userState);
        }
        
        private void OnSearchShipOROilAdressOperationCompleted(object arg) {
            if ((this.SearchShipOROilAdressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchShipOROilAdressCompleted(this, new SearchShipOROilAdressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOildepotInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOildepotInfo() {
            object[] results = this.Invoke("GetOildepotInfo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOildepotInfoAsync() {
            this.GetOildepotInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetOildepotInfoAsync(object userState) {
            if ((this.GetOildepotInfoOperationCompleted == null)) {
                this.GetOildepotInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOildepotInfoOperationCompleted);
            }
            this.InvokeAsync("GetOildepotInfo", new object[0], this.GetOildepotInfoOperationCompleted, userState);
        }
        
        private void OnGetOildepotInfoOperationCompleted(object arg) {
            if ((this.GetOildepotInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOildepotInfoCompleted(this, new GetOildepotInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRefineryInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetRefineryInfo() {
            object[] results = this.Invoke("GetRefineryInfo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetRefineryInfoAsync() {
            this.GetRefineryInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetRefineryInfoAsync(object userState) {
            if ((this.GetRefineryInfoOperationCompleted == null)) {
                this.GetRefineryInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRefineryInfoOperationCompleted);
            }
            this.InvokeAsync("GetRefineryInfo", new object[0], this.GetRefineryInfoOperationCompleted, userState);
        }
        
        private void OnGetRefineryInfoOperationCompleted(object arg) {
            if ((this.GetRefineryInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRefineryInfoCompleted(this, new GetRefineryInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransportationInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTransportationInfo() {
            object[] results = this.Invoke("GetTransportationInfo", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransportationInfoAsync() {
            this.GetTransportationInfoAsync(null);
        }
        
        /// <remarks/>
        public void GetTransportationInfoAsync(object userState) {
            if ((this.GetTransportationInfoOperationCompleted == null)) {
                this.GetTransportationInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransportationInfoOperationCompleted);
            }
            this.InvokeAsync("GetTransportationInfo", new object[0], this.GetTransportationInfoOperationCompleted, userState);
        }
        
        private void OnGetTransportationInfoOperationCompleted(object arg) {
            if ((this.GetTransportationInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransportationInfoCompleted(this, new GetTransportationInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetYjInfoForclient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetYjInfoForclient(string clientid, int ndtype, string tdate) {
            object[] results = this.Invoke("GetYjInfoForclient", new object[] {
                        clientid,
                        ndtype,
                        tdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetYjInfoForclientAsync(string clientid, int ndtype, string tdate) {
            this.GetYjInfoForclientAsync(clientid, ndtype, tdate, null);
        }
        
        /// <remarks/>
        public void GetYjInfoForclientAsync(string clientid, int ndtype, string tdate, object userState) {
            if ((this.GetYjInfoForclientOperationCompleted == null)) {
                this.GetYjInfoForclientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYjInfoForclientOperationCompleted);
            }
            this.InvokeAsync("GetYjInfoForclient", new object[] {
                        clientid,
                        ndtype,
                        tdate}, this.GetYjInfoForclientOperationCompleted, userState);
        }
        
        private void OnGetYjInfoForclientOperationCompleted(object arg) {
            if ((this.GetYjInfoForclientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYjInfoForclientCompleted(this, new GetYjInfoForclientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetYjInfoForIphone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetYjInfoForIphone(string clientid, int ndtype, string tdate) {
            object[] results = this.Invoke("GetYjInfoForIphone", new object[] {
                        clientid,
                        ndtype,
                        tdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetYjInfoForIphoneAsync(string clientid, int ndtype, string tdate) {
            this.GetYjInfoForIphoneAsync(clientid, ndtype, tdate, null);
        }
        
        /// <remarks/>
        public void GetYjInfoForIphoneAsync(string clientid, int ndtype, string tdate, object userState) {
            if ((this.GetYjInfoForIphoneOperationCompleted == null)) {
                this.GetYjInfoForIphoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYjInfoForIphoneOperationCompleted);
            }
            this.InvokeAsync("GetYjInfoForIphone", new object[] {
                        clientid,
                        ndtype,
                        tdate}, this.GetYjInfoForIphoneOperationCompleted, userState);
        }
        
        private void OnGetYjInfoForIphoneOperationCompleted(object arg) {
            if ((this.GetYjInfoForIphoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYjInfoForIphoneCompleted(this, new GetYjInfoForIphoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetYjInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetYjInfo(int ndtype, string tdate) {
            object[] results = this.Invoke("GetYjInfo", new object[] {
                        ndtype,
                        tdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetYjInfoAsync(int ndtype, string tdate) {
            this.GetYjInfoAsync(ndtype, tdate, null);
        }
        
        /// <remarks/>
        public void GetYjInfoAsync(int ndtype, string tdate, object userState) {
            if ((this.GetYjInfoOperationCompleted == null)) {
                this.GetYjInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYjInfoOperationCompleted);
            }
            this.InvokeAsync("GetYjInfo", new object[] {
                        ndtype,
                        tdate}, this.GetYjInfoOperationCompleted, userState);
        }
        
        private void OnGetYjInfoOperationCompleted(object arg) {
            if ((this.GetYjInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYjInfoCompleted(this, new GetYjInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllYk", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllYk(int entid, int ndtype, string tdate) {
            object[] results = this.Invoke("GetAllYk", new object[] {
                        entid,
                        ndtype,
                        tdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllYkAsync(int entid, int ndtype, string tdate) {
            this.GetAllYkAsync(entid, ndtype, tdate, null);
        }
        
        /// <remarks/>
        public void GetAllYkAsync(int entid, int ndtype, string tdate, object userState) {
            if ((this.GetAllYkOperationCompleted == null)) {
                this.GetAllYkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllYkOperationCompleted);
            }
            this.InvokeAsync("GetAllYk", new object[] {
                        entid,
                        ndtype,
                        tdate}, this.GetAllYkOperationCompleted, userState);
        }
        
        private void OnGetAllYkOperationCompleted(object arg) {
            if ((this.GetAllYkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllYkCompleted(this, new GetAllYkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetProgressAllYk", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetProgressAllYk(int entid, int ndtype, string tdate) {
            object[] results = this.Invoke("GetProgressAllYk", new object[] {
                        entid,
                        ndtype,
                        tdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetProgressAllYkAsync(int entid, int ndtype, string tdate) {
            this.GetProgressAllYkAsync(entid, ndtype, tdate, null);
        }
        
        /// <remarks/>
        public void GetProgressAllYkAsync(int entid, int ndtype, string tdate, object userState) {
            if ((this.GetProgressAllYkOperationCompleted == null)) {
                this.GetProgressAllYkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProgressAllYkOperationCompleted);
            }
            this.InvokeAsync("GetProgressAllYk", new object[] {
                        entid,
                        ndtype,
                        tdate}, this.GetProgressAllYkOperationCompleted, userState);
        }
        
        private void OnGetProgressAllYkOperationCompleted(object arg) {
            if ((this.GetProgressAllYkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProgressAllYkCompleted(this, new GetProgressAllYkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPlangoodAllYk", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetPlangoodAllYk(string entid, string apId, int ntype, string datestr) {
            object[] results = this.Invoke("GetPlangoodAllYk", new object[] {
                        entid,
                        apId,
                        ntype,
                        datestr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetPlangoodAllYkAsync(string entid, string apId, int ntype, string datestr) {
            this.GetPlangoodAllYkAsync(entid, apId, ntype, datestr, null);
        }
        
        /// <remarks/>
        public void GetPlangoodAllYkAsync(string entid, string apId, int ntype, string datestr, object userState) {
            if ((this.GetPlangoodAllYkOperationCompleted == null)) {
                this.GetPlangoodAllYkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPlangoodAllYkOperationCompleted);
            }
            this.InvokeAsync("GetPlangoodAllYk", new object[] {
                        entid,
                        apId,
                        ntype,
                        datestr}, this.GetPlangoodAllYkOperationCompleted, userState);
        }
        
        private void OnGetPlangoodAllYkOperationCompleted(object arg) {
            if ((this.GetPlangoodAllYkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPlangoodAllYkCompleted(this, new GetPlangoodAllYkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetdatielYk", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetdatielYk(int varietytype, int entid, int ndtype, string tdate) {
            object[] results = this.Invoke("GetdatielYk", new object[] {
                        varietytype,
                        entid,
                        ndtype,
                        tdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetdatielYkAsync(int varietytype, int entid, int ndtype, string tdate) {
            this.GetdatielYkAsync(varietytype, entid, ndtype, tdate, null);
        }
        
        /// <remarks/>
        public void GetdatielYkAsync(int varietytype, int entid, int ndtype, string tdate, object userState) {
            if ((this.GetdatielYkOperationCompleted == null)) {
                this.GetdatielYkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetdatielYkOperationCompleted);
            }
            this.InvokeAsync("GetdatielYk", new object[] {
                        varietytype,
                        entid,
                        ndtype,
                        tdate}, this.GetdatielYkOperationCompleted, userState);
        }
        
        private void OnGetdatielYkOperationCompleted(object arg) {
            if ((this.GetdatielYkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetdatielYkCompleted(this, new GetdatielYkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllYjProgressInfoForVarietytype", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetAllYjProgressInfoForVarietytype(int varietytype, int entid, int ndtype, string tdate) {
            object[] results = this.Invoke("GetAllYjProgressInfoForVarietytype", new object[] {
                        varietytype,
                        entid,
                        ndtype,
                        tdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllYjProgressInfoForVarietytypeAsync(int varietytype, int entid, int ndtype, string tdate) {
            this.GetAllYjProgressInfoForVarietytypeAsync(varietytype, entid, ndtype, tdate, null);
        }
        
        /// <remarks/>
        public void GetAllYjProgressInfoForVarietytypeAsync(int varietytype, int entid, int ndtype, string tdate, object userState) {
            if ((this.GetAllYjProgressInfoForVarietytypeOperationCompleted == null)) {
                this.GetAllYjProgressInfoForVarietytypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllYjProgressInfoForVarietytypeOperationCompleted);
            }
            this.InvokeAsync("GetAllYjProgressInfoForVarietytype", new object[] {
                        varietytype,
                        entid,
                        ndtype,
                        tdate}, this.GetAllYjProgressInfoForVarietytypeOperationCompleted, userState);
        }
        
        private void OnGetAllYjProgressInfoForVarietytypeOperationCompleted(object arg) {
            if ((this.GetAllYjProgressInfoForVarietytypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllYjProgressInfoForVarietytypeCompleted(this, new GetAllYjProgressInfoForVarietytypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetKcYjInfoForIphone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetKcYjInfoForIphone(int entid, int ndtype, string tdate) {
            object[] results = this.Invoke("GetKcYjInfoForIphone", new object[] {
                        entid,
                        ndtype,
                        tdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetKcYjInfoForIphoneAsync(int entid, int ndtype, string tdate) {
            this.GetKcYjInfoForIphoneAsync(entid, ndtype, tdate, null);
        }
        
        /// <remarks/>
        public void GetKcYjInfoForIphoneAsync(int entid, int ndtype, string tdate, object userState) {
            if ((this.GetKcYjInfoForIphoneOperationCompleted == null)) {
                this.GetKcYjInfoForIphoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetKcYjInfoForIphoneOperationCompleted);
            }
            this.InvokeAsync("GetKcYjInfoForIphone", new object[] {
                        entid,
                        ndtype,
                        tdate}, this.GetKcYjInfoForIphoneOperationCompleted, userState);
        }
        
        private void OnGetKcYjInfoForIphoneOperationCompleted(object arg) {
            if ((this.GetKcYjInfoForIphoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetKcYjInfoForIphoneCompleted(this, new GetKcYjInfoForIphoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetYjWarehouseSaveInfoForEid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetYjWarehouseSaveInfoForEid(int entid, int ndtype, string tdate) {
            object[] results = this.Invoke("GetYjWarehouseSaveInfoForEid", new object[] {
                        entid,
                        ndtype,
                        tdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetYjWarehouseSaveInfoForEidAsync(int entid, int ndtype, string tdate) {
            this.GetYjWarehouseSaveInfoForEidAsync(entid, ndtype, tdate, null);
        }
        
        /// <remarks/>
        public void GetYjWarehouseSaveInfoForEidAsync(int entid, int ndtype, string tdate, object userState) {
            if ((this.GetYjWarehouseSaveInfoForEidOperationCompleted == null)) {
                this.GetYjWarehouseSaveInfoForEidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYjWarehouseSaveInfoForEidOperationCompleted);
            }
            this.InvokeAsync("GetYjWarehouseSaveInfoForEid", new object[] {
                        entid,
                        ndtype,
                        tdate}, this.GetYjWarehouseSaveInfoForEidOperationCompleted, userState);
        }
        
        private void OnGetYjWarehouseSaveInfoForEidOperationCompleted(object arg) {
            if ((this.GetYjWarehouseSaveInfoForEidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYjWarehouseSaveInfoForEidCompleted(this, new GetYjWarehouseSaveInfoForEidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCcYjInfoForIphone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCcYjInfoForIphone(int entid, int ndtype, string tdate) {
            object[] results = this.Invoke("GetCcYjInfoForIphone", new object[] {
                        entid,
                        ndtype,
                        tdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCcYjInfoForIphoneAsync(int entid, int ndtype, string tdate) {
            this.GetCcYjInfoForIphoneAsync(entid, ndtype, tdate, null);
        }
        
        /// <remarks/>
        public void GetCcYjInfoForIphoneAsync(int entid, int ndtype, string tdate, object userState) {
            if ((this.GetCcYjInfoForIphoneOperationCompleted == null)) {
                this.GetCcYjInfoForIphoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCcYjInfoForIphoneOperationCompleted);
            }
            this.InvokeAsync("GetCcYjInfoForIphone", new object[] {
                        entid,
                        ndtype,
                        tdate}, this.GetCcYjInfoForIphoneOperationCompleted, userState);
        }
        
        private void OnGetCcYjInfoForIphoneOperationCompleted(object arg) {
            if ((this.GetCcYjInfoForIphoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCcYjInfoForIphoneCompleted(this, new GetCcYjInfoForIphoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetYjProgressInfoForEid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetYjProgressInfoForEid(int entid, int ndtype, string tdate) {
            object[] results = this.Invoke("GetYjProgressInfoForEid", new object[] {
                        entid,
                        ndtype,
                        tdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetYjProgressInfoForEidAsync(int entid, int ndtype, string tdate) {
            this.GetYjProgressInfoForEidAsync(entid, ndtype, tdate, null);
        }
        
        /// <remarks/>
        public void GetYjProgressInfoForEidAsync(int entid, int ndtype, string tdate, object userState) {
            if ((this.GetYjProgressInfoForEidOperationCompleted == null)) {
                this.GetYjProgressInfoForEidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYjProgressInfoForEidOperationCompleted);
            }
            this.InvokeAsync("GetYjProgressInfoForEid", new object[] {
                        entid,
                        ndtype,
                        tdate}, this.GetYjProgressInfoForEidOperationCompleted, userState);
        }
        
        private void OnGetYjProgressInfoForEidOperationCompleted(object arg) {
            if ((this.GetYjProgressInfoForEidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYjProgressInfoForEidCompleted(this, new GetYjProgressInfoForEidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetYjWarehouseSaveInfoForVarietytype", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetYjWarehouseSaveInfoForVarietytype(int varietytype, int entid, int ndtype, string tdate) {
            object[] results = this.Invoke("GetYjWarehouseSaveInfoForVarietytype", new object[] {
                        varietytype,
                        entid,
                        ndtype,
                        tdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetYjWarehouseSaveInfoForVarietytypeAsync(int varietytype, int entid, int ndtype, string tdate) {
            this.GetYjWarehouseSaveInfoForVarietytypeAsync(varietytype, entid, ndtype, tdate, null);
        }
        
        /// <remarks/>
        public void GetYjWarehouseSaveInfoForVarietytypeAsync(int varietytype, int entid, int ndtype, string tdate, object userState) {
            if ((this.GetYjWarehouseSaveInfoForVarietytypeOperationCompleted == null)) {
                this.GetYjWarehouseSaveInfoForVarietytypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYjWarehouseSaveInfoForVarietytypeOperationCompleted);
            }
            this.InvokeAsync("GetYjWarehouseSaveInfoForVarietytype", new object[] {
                        varietytype,
                        entid,
                        ndtype,
                        tdate}, this.GetYjWarehouseSaveInfoForVarietytypeOperationCompleted, userState);
        }
        
        private void OnGetYjWarehouseSaveInfoForVarietytypeOperationCompleted(object arg) {
            if ((this.GetYjWarehouseSaveInfoForVarietytypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYjWarehouseSaveInfoForVarietytypeCompleted(this, new GetYjWarehouseSaveInfoForVarietytypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetYjProgressInfoForVarietytype", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetYjProgressInfoForVarietytype(int varietytype, int entid, int ndtype, string tdate) {
            object[] results = this.Invoke("GetYjProgressInfoForVarietytype", new object[] {
                        varietytype,
                        entid,
                        ndtype,
                        tdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetYjProgressInfoForVarietytypeAsync(int varietytype, int entid, int ndtype, string tdate) {
            this.GetYjProgressInfoForVarietytypeAsync(varietytype, entid, ndtype, tdate, null);
        }
        
        /// <remarks/>
        public void GetYjProgressInfoForVarietytypeAsync(int varietytype, int entid, int ndtype, string tdate, object userState) {
            if ((this.GetYjProgressInfoForVarietytypeOperationCompleted == null)) {
                this.GetYjProgressInfoForVarietytypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYjProgressInfoForVarietytypeOperationCompleted);
            }
            this.InvokeAsync("GetYjProgressInfoForVarietytype", new object[] {
                        varietytype,
                        entid,
                        ndtype,
                        tdate}, this.GetYjProgressInfoForVarietytypeOperationCompleted, userState);
        }
        
        private void OnGetYjProgressInfoForVarietytypeOperationCompleted(object arg) {
            if ((this.GetYjProgressInfoForVarietytypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYjProgressInfoForVarietytypeCompleted(this, new GetYjProgressInfoForVarietytypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransportAudit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTransportAudit() {
            object[] results = this.Invoke("GetTransportAudit", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransportAuditAsync() {
            this.GetTransportAuditAsync(null);
        }
        
        /// <remarks/>
        public void GetTransportAuditAsync(object userState) {
            if ((this.GetTransportAuditOperationCompleted == null)) {
                this.GetTransportAuditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransportAuditOperationCompleted);
            }
            this.InvokeAsync("GetTransportAudit", new object[0], this.GetTransportAuditOperationCompleted, userState);
        }
        
        private void OnGetTransportAuditOperationCompleted(object arg) {
            if ((this.GetTransportAuditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransportAuditCompleted(this, new GetTransportAuditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommitTransportAudit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CommitTransportAudit(string dpoappid, string username, int ctype) {
            object[] results = this.Invoke("CommitTransportAudit", new object[] {
                        dpoappid,
                        username,
                        ctype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CommitTransportAuditAsync(string dpoappid, string username, int ctype) {
            this.CommitTransportAuditAsync(dpoappid, username, ctype, null);
        }
        
        /// <remarks/>
        public void CommitTransportAuditAsync(string dpoappid, string username, int ctype, object userState) {
            if ((this.CommitTransportAuditOperationCompleted == null)) {
                this.CommitTransportAuditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitTransportAuditOperationCompleted);
            }
            this.InvokeAsync("CommitTransportAudit", new object[] {
                        dpoappid,
                        username,
                        ctype}, this.CommitTransportAuditOperationCompleted, userState);
        }
        
        private void OnCommitTransportAuditOperationCompleted(object arg) {
            if ((this.CommitTransportAuditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitTransportAuditCompleted(this, new CommitTransportAuditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWaterTranAudit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWaterTranAudit(string usertype) {
            object[] results = this.Invoke("GetWaterTranAudit", new object[] {
                        usertype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWaterTranAuditAsync(string usertype) {
            this.GetWaterTranAuditAsync(usertype, null);
        }
        
        /// <remarks/>
        public void GetWaterTranAuditAsync(string usertype, object userState) {
            if ((this.GetWaterTranAuditOperationCompleted == null)) {
                this.GetWaterTranAuditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWaterTranAuditOperationCompleted);
            }
            this.InvokeAsync("GetWaterTranAudit", new object[] {
                        usertype}, this.GetWaterTranAuditOperationCompleted, userState);
        }
        
        private void OnGetWaterTranAuditOperationCompleted(object arg) {
            if ((this.GetWaterTranAuditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWaterTranAuditCompleted(this, new GetWaterTranAuditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetHCTranAudit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetHCTranAudit(string usertype) {
            object[] results = this.Invoke("GetHCTranAudit", new object[] {
                        usertype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetHCTranAuditAsync(string usertype) {
            this.GetHCTranAuditAsync(usertype, null);
        }
        
        /// <remarks/>
        public void GetHCTranAuditAsync(string usertype, object userState) {
            if ((this.GetHCTranAuditOperationCompleted == null)) {
                this.GetHCTranAuditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetHCTranAuditOperationCompleted);
            }
            this.InvokeAsync("GetHCTranAudit", new object[] {
                        usertype}, this.GetHCTranAuditOperationCompleted, userState);
        }
        
        private void OnGetHCTranAuditOperationCompleted(object arg) {
            if ((this.GetHCTranAuditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetHCTranAuditCompleted(this, new GetHCTranAuditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommitDispatcherAudit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CommitDispatcherAudit(string pdetailid) {
            object[] results = this.Invoke("CommitDispatcherAudit", new object[] {
                        pdetailid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CommitDispatcherAuditAsync(string pdetailid) {
            this.CommitDispatcherAuditAsync(pdetailid, null);
        }
        
        /// <remarks/>
        public void CommitDispatcherAuditAsync(string pdetailid, object userState) {
            if ((this.CommitDispatcherAuditOperationCompleted == null)) {
                this.CommitDispatcherAuditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitDispatcherAuditOperationCompleted);
            }
            this.InvokeAsync("CommitDispatcherAudit", new object[] {
                        pdetailid}, this.CommitDispatcherAuditOperationCompleted, userState);
        }
        
        private void OnCommitDispatcherAuditOperationCompleted(object arg) {
            if ((this.CommitDispatcherAuditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitDispatcherAuditCompleted(this, new CommitDispatcherAuditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetDispatcherAudit", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetDispatcherAudit() {
            object[] results = this.Invoke("GetDispatcherAudit", new object[0]);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetDispatcherAuditAsync() {
            this.GetDispatcherAuditAsync(null);
        }
        
        /// <remarks/>
        public void GetDispatcherAuditAsync(object userState) {
            if ((this.GetDispatcherAuditOperationCompleted == null)) {
                this.GetDispatcherAuditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDispatcherAuditOperationCompleted);
            }
            this.InvokeAsync("GetDispatcherAudit", new object[0], this.GetDispatcherAuditOperationCompleted, userState);
        }
        
        private void OnGetDispatcherAuditOperationCompleted(object arg) {
            if ((this.GetDispatcherAuditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDispatcherAuditCompleted(this, new GetDispatcherAuditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWaterTranConfirm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWaterTranConfirm(string clientid) {
            object[] results = this.Invoke("GetWaterTranConfirm", new object[] {
                        clientid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWaterTranConfirmAsync(string clientid) {
            this.GetWaterTranConfirmAsync(clientid, null);
        }
        
        /// <remarks/>
        public void GetWaterTranConfirmAsync(string clientid, object userState) {
            if ((this.GetWaterTranConfirmOperationCompleted == null)) {
                this.GetWaterTranConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWaterTranConfirmOperationCompleted);
            }
            this.InvokeAsync("GetWaterTranConfirm", new object[] {
                        clientid}, this.GetWaterTranConfirmOperationCompleted, userState);
        }
        
        private void OnGetWaterTranConfirmOperationCompleted(object arg) {
            if ((this.GetWaterTranConfirmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWaterTranConfirmCompleted(this, new GetWaterTranConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommitWaterTranConfirm", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CommitWaterTranConfirm(string plandetailid, string planremark, string lastvariety, string shiptime, int ctype) {
            object[] results = this.Invoke("CommitWaterTranConfirm", new object[] {
                        plandetailid,
                        planremark,
                        lastvariety,
                        shiptime,
                        ctype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CommitWaterTranConfirmAsync(string plandetailid, string planremark, string lastvariety, string shiptime, int ctype) {
            this.CommitWaterTranConfirmAsync(plandetailid, planremark, lastvariety, shiptime, ctype, null);
        }
        
        /// <remarks/>
        public void CommitWaterTranConfirmAsync(string plandetailid, string planremark, string lastvariety, string shiptime, int ctype, object userState) {
            if ((this.CommitWaterTranConfirmOperationCompleted == null)) {
                this.CommitWaterTranConfirmOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitWaterTranConfirmOperationCompleted);
            }
            this.InvokeAsync("CommitWaterTranConfirm", new object[] {
                        plandetailid,
                        planremark,
                        lastvariety,
                        shiptime,
                        ctype}, this.CommitWaterTranConfirmOperationCompleted, userState);
        }
        
        private void OnCommitWaterTranConfirmOperationCompleted(object arg) {
            if ((this.CommitWaterTranConfirmCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitWaterTranConfirmCompleted(this, new CommitWaterTranConfirmCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWaterTranAlterPort", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWaterTranAlterPort(string clientid) {
            object[] results = this.Invoke("GetWaterTranAlterPort", new object[] {
                        clientid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWaterTranAlterPortAsync(string clientid) {
            this.GetWaterTranAlterPortAsync(clientid, null);
        }
        
        /// <remarks/>
        public void GetWaterTranAlterPortAsync(string clientid, object userState) {
            if ((this.GetWaterTranAlterPortOperationCompleted == null)) {
                this.GetWaterTranAlterPortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWaterTranAlterPortOperationCompleted);
            }
            this.InvokeAsync("GetWaterTranAlterPort", new object[] {
                        clientid}, this.GetWaterTranAlterPortOperationCompleted, userState);
        }
        
        private void OnGetWaterTranAlterPortOperationCompleted(object arg) {
            if ((this.GetWaterTranAlterPortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWaterTranAlterPortCompleted(this, new GetWaterTranAlterPortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommitWaterTranAlterPort", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CommitWaterTranAlterPort(string id, string remark, string username, int ctype) {
            object[] results = this.Invoke("CommitWaterTranAlterPort", new object[] {
                        id,
                        remark,
                        username,
                        ctype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CommitWaterTranAlterPortAsync(string id, string remark, string username, int ctype) {
            this.CommitWaterTranAlterPortAsync(id, remark, username, ctype, null);
        }
        
        /// <remarks/>
        public void CommitWaterTranAlterPortAsync(string id, string remark, string username, int ctype, object userState) {
            if ((this.CommitWaterTranAlterPortOperationCompleted == null)) {
                this.CommitWaterTranAlterPortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitWaterTranAlterPortOperationCompleted);
            }
            this.InvokeAsync("CommitWaterTranAlterPort", new object[] {
                        id,
                        remark,
                        username,
                        ctype}, this.CommitWaterTranAlterPortOperationCompleted, userState);
        }
        
        private void OnCommitWaterTranAlterPortOperationCompleted(object arg) {
            if ((this.CommitWaterTranAlterPortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitWaterTranAlterPortCompleted(this, new CommitWaterTranAlterPortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSendGoodstime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSendGoodstime(int userparentid, string transtype) {
            object[] results = this.Invoke("GetSendGoodstime", new object[] {
                        userparentid,
                        transtype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSendGoodstimeAsync(int userparentid, string transtype) {
            this.GetSendGoodstimeAsync(userparentid, transtype, null);
        }
        
        /// <remarks/>
        public void GetSendGoodstimeAsync(int userparentid, string transtype, object userState) {
            if ((this.GetSendGoodstimeOperationCompleted == null)) {
                this.GetSendGoodstimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSendGoodstimeOperationCompleted);
            }
            this.InvokeAsync("GetSendGoodstime", new object[] {
                        userparentid,
                        transtype}, this.GetSendGoodstimeOperationCompleted, userState);
        }
        
        private void OnGetSendGoodstimeOperationCompleted(object arg) {
            if ((this.GetSendGoodstimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSendGoodstimeCompleted(this, new GetSendGoodstimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommitGoodsTime", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CommitGoodsTime(string pid, string plandetailid, string sjfhl, string begintime, string endtime) {
            object[] results = this.Invoke("CommitGoodsTime", new object[] {
                        pid,
                        plandetailid,
                        sjfhl,
                        begintime,
                        endtime});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CommitGoodsTimeAsync(string pid, string plandetailid, string sjfhl, string begintime, string endtime) {
            this.CommitGoodsTimeAsync(pid, plandetailid, sjfhl, begintime, endtime, null);
        }
        
        /// <remarks/>
        public void CommitGoodsTimeAsync(string pid, string plandetailid, string sjfhl, string begintime, string endtime, object userState) {
            if ((this.CommitGoodsTimeOperationCompleted == null)) {
                this.CommitGoodsTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitGoodsTimeOperationCompleted);
            }
            this.InvokeAsync("CommitGoodsTime", new object[] {
                        pid,
                        plandetailid,
                        sjfhl,
                        begintime,
                        endtime}, this.CommitGoodsTimeOperationCompleted, userState);
        }
        
        private void OnCommitGoodsTimeOperationCompleted(object arg) {
            if ((this.CommitGoodsTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitGoodsTimeCompleted(this, new CommitGoodsTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommitAuditResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CommitAuditResult(string userid, string usern, string usertype, string audid, int atype) {
            object[] results = this.Invoke("CommitAuditResult", new object[] {
                        userid,
                        usern,
                        usertype,
                        audid,
                        atype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CommitAuditResultAsync(string userid, string usern, string usertype, string audid, int atype) {
            this.CommitAuditResultAsync(userid, usern, usertype, audid, atype, null);
        }
        
        /// <remarks/>
        public void CommitAuditResultAsync(string userid, string usern, string usertype, string audid, int atype, object userState) {
            if ((this.CommitAuditResultOperationCompleted == null)) {
                this.CommitAuditResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitAuditResultOperationCompleted);
            }
            this.InvokeAsync("CommitAuditResult", new object[] {
                        userid,
                        usern,
                        usertype,
                        audid,
                        atype}, this.CommitAuditResultOperationCompleted, userState);
        }
        
        private void OnCommitAuditResultOperationCompleted(object arg) {
            if ((this.CommitAuditResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitAuditResultCompleted(this, new CommitAuditResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommitHCJHAuditResult", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CommitHCJHAuditResult(string usern, string audid) {
            object[] results = this.Invoke("CommitHCJHAuditResult", new object[] {
                        usern,
                        audid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CommitHCJHAuditResultAsync(string usern, string audid) {
            this.CommitHCJHAuditResultAsync(usern, audid, null);
        }
        
        /// <remarks/>
        public void CommitHCJHAuditResultAsync(string usern, string audid, object userState) {
            if ((this.CommitHCJHAuditResultOperationCompleted == null)) {
                this.CommitHCJHAuditResultOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitHCJHAuditResultOperationCompleted);
            }
            this.InvokeAsync("CommitHCJHAuditResult", new object[] {
                        usern,
                        audid}, this.CommitHCJHAuditResultOperationCompleted, userState);
        }
        
        private void OnCommitHCJHAuditResultOperationCompleted(object arg) {
            if ((this.CommitHCJHAuditResultCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitHCJHAuditResultCompleted(this, new CommitHCJHAuditResultCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetTransportCostReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetTransportCostReceipt(string clientid) {
            object[] results = this.Invoke("GetTransportCostReceipt", new object[] {
                        clientid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetTransportCostReceiptAsync(string clientid) {
            this.GetTransportCostReceiptAsync(clientid, null);
        }
        
        /// <remarks/>
        public void GetTransportCostReceiptAsync(string clientid, object userState) {
            if ((this.GetTransportCostReceiptOperationCompleted == null)) {
                this.GetTransportCostReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTransportCostReceiptOperationCompleted);
            }
            this.InvokeAsync("GetTransportCostReceipt", new object[] {
                        clientid}, this.GetTransportCostReceiptOperationCompleted, userState);
        }
        
        private void OnGetTransportCostReceiptOperationCompleted(object arg) {
            if ((this.GetTransportCostReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTransportCostReceiptCompleted(this, new GetTransportCostReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CommitTransportCostReceipt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string CommitTransportCostReceipt(string pdetailid) {
            object[] results = this.Invoke("CommitTransportCostReceipt", new object[] {
                        pdetailid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void CommitTransportCostReceiptAsync(string pdetailid) {
            this.CommitTransportCostReceiptAsync(pdetailid, null);
        }
        
        /// <remarks/>
        public void CommitTransportCostReceiptAsync(string pdetailid, object userState) {
            if ((this.CommitTransportCostReceiptOperationCompleted == null)) {
                this.CommitTransportCostReceiptOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCommitTransportCostReceiptOperationCompleted);
            }
            this.InvokeAsync("CommitTransportCostReceipt", new object[] {
                        pdetailid}, this.CommitTransportCostReceiptOperationCompleted, userState);
        }
        
        private void OnCommitTransportCostReceiptOperationCompleted(object arg) {
            if ((this.CommitTransportCostReceiptCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CommitTransportCostReceiptCompleted(this, new CommitTransportCostReceiptCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetYJshowcolorInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetYJshowcolorInfo(string type) {
            object[] results = this.Invoke("GetYJshowcolorInfo", new object[] {
                        type});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetYJshowcolorInfoAsync(string type) {
            this.GetYJshowcolorInfoAsync(type, null);
        }
        
        /// <remarks/>
        public void GetYJshowcolorInfoAsync(string type, object userState) {
            if ((this.GetYJshowcolorInfoOperationCompleted == null)) {
                this.GetYJshowcolorInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYJshowcolorInfoOperationCompleted);
            }
            this.InvokeAsync("GetYJshowcolorInfo", new object[] {
                        type}, this.GetYJshowcolorInfoOperationCompleted, userState);
        }
        
        private void OnGetYJshowcolorInfoOperationCompleted(object arg) {
            if ((this.GetYJshowcolorInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYJshowcolorInfoCompleted(this, new GetYJshowcolorInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSendFactoryProgress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSendFactoryProgress(string ydate) {
            object[] results = this.Invoke("GetSendFactoryProgress", new object[] {
                        ydate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSendFactoryProgressAsync(string ydate) {
            this.GetSendFactoryProgressAsync(ydate, null);
        }
        
        /// <remarks/>
        public void GetSendFactoryProgressAsync(string ydate, object userState) {
            if ((this.GetSendFactoryProgressOperationCompleted == null)) {
                this.GetSendFactoryProgressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSendFactoryProgressOperationCompleted);
            }
            this.InvokeAsync("GetSendFactoryProgress", new object[] {
                        ydate}, this.GetSendFactoryProgressOperationCompleted, userState);
        }
        
        private void OnGetSendFactoryProgressOperationCompleted(object arg) {
            if ((this.GetSendFactoryProgressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSendFactoryProgressCompleted(this, new GetSendFactoryProgressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSendFactoryProgressforEnt", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSendFactoryProgressforEnt(int consid, string ydate, string vtype) {
            object[] results = this.Invoke("GetSendFactoryProgressforEnt", new object[] {
                        consid,
                        ydate,
                        vtype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSendFactoryProgressforEntAsync(int consid, string ydate, string vtype) {
            this.GetSendFactoryProgressforEntAsync(consid, ydate, vtype, null);
        }
        
        /// <remarks/>
        public void GetSendFactoryProgressforEntAsync(int consid, string ydate, string vtype, object userState) {
            if ((this.GetSendFactoryProgressforEntOperationCompleted == null)) {
                this.GetSendFactoryProgressforEntOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSendFactoryProgressforEntOperationCompleted);
            }
            this.InvokeAsync("GetSendFactoryProgressforEnt", new object[] {
                        consid,
                        ydate,
                        vtype}, this.GetSendFactoryProgressforEntOperationCompleted, userState);
        }
        
        private void OnGetSendFactoryProgressforEntOperationCompleted(object arg) {
            if ((this.GetSendFactoryProgressforEntCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSendFactoryProgressforEntCompleted(this, new GetSendFactoryProgressforEntCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarehouseSave", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWarehouseSave(string tdate) {
            object[] results = this.Invoke("GetWarehouseSave", new object[] {
                        tdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarehouseSaveAsync(string tdate) {
            this.GetWarehouseSaveAsync(tdate, null);
        }
        
        /// <remarks/>
        public void GetWarehouseSaveAsync(string tdate, object userState) {
            if ((this.GetWarehouseSaveOperationCompleted == null)) {
                this.GetWarehouseSaveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarehouseSaveOperationCompleted);
            }
            this.InvokeAsync("GetWarehouseSave", new object[] {
                        tdate}, this.GetWarehouseSaveOperationCompleted, userState);
        }
        
        private void OnGetWarehouseSaveOperationCompleted(object arg) {
            if ((this.GetWarehouseSaveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarehouseSaveCompleted(this, new GetWarehouseSaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarehouseSaveByVtype", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWarehouseSaveByVtype(string tdate) {
            object[] results = this.Invoke("GetWarehouseSaveByVtype", new object[] {
                        tdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarehouseSaveByVtypeAsync(string tdate) {
            this.GetWarehouseSaveByVtypeAsync(tdate, null);
        }
        
        /// <remarks/>
        public void GetWarehouseSaveByVtypeAsync(string tdate, object userState) {
            if ((this.GetWarehouseSaveByVtypeOperationCompleted == null)) {
                this.GetWarehouseSaveByVtypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarehouseSaveByVtypeOperationCompleted);
            }
            this.InvokeAsync("GetWarehouseSaveByVtype", new object[] {
                        tdate}, this.GetWarehouseSaveByVtypeOperationCompleted, userState);
        }
        
        private void OnGetWarehouseSaveByVtypeOperationCompleted(object arg) {
            if ((this.GetWarehouseSaveByVtypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarehouseSaveByVtypeCompleted(this, new GetWarehouseSaveByVtypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarehouseSaveforSid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWarehouseSaveforSid(int sid, string tdate) {
            object[] results = this.Invoke("GetWarehouseSaveforSid", new object[] {
                        sid,
                        tdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarehouseSaveforSidAsync(int sid, string tdate) {
            this.GetWarehouseSaveforSidAsync(sid, tdate, null);
        }
        
        /// <remarks/>
        public void GetWarehouseSaveforSidAsync(int sid, string tdate, object userState) {
            if ((this.GetWarehouseSaveforSidOperationCompleted == null)) {
                this.GetWarehouseSaveforSidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarehouseSaveforSidOperationCompleted);
            }
            this.InvokeAsync("GetWarehouseSaveforSid", new object[] {
                        sid,
                        tdate}, this.GetWarehouseSaveforSidOperationCompleted, userState);
        }
        
        private void OnGetWarehouseSaveforSidOperationCompleted(object arg) {
            if ((this.GetWarehouseSaveforSidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarehouseSaveforSidCompleted(this, new GetWarehouseSaveforSidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOildepotforSid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOildepotforSid(int sid) {
            object[] results = this.Invoke("GetOildepotforSid", new object[] {
                        sid});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOildepotforSidAsync(int sid) {
            this.GetOildepotforSidAsync(sid, null);
        }
        
        /// <remarks/>
        public void GetOildepotforSidAsync(int sid, object userState) {
            if ((this.GetOildepotforSidOperationCompleted == null)) {
                this.GetOildepotforSidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOildepotforSidOperationCompleted);
            }
            this.InvokeAsync("GetOildepotforSid", new object[] {
                        sid}, this.GetOildepotforSidOperationCompleted, userState);
        }
        
        private void OnGetOildepotforSidOperationCompleted(object arg) {
            if ((this.GetOildepotforSidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOildepotforSidCompleted(this, new GetOildepotforSidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWarehouseSaveforOiid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetWarehouseSaveforOiid(int oiid, string tdate, string vtype) {
            object[] results = this.Invoke("GetWarehouseSaveforOiid", new object[] {
                        oiid,
                        tdate,
                        vtype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetWarehouseSaveforOiidAsync(int oiid, string tdate, string vtype) {
            this.GetWarehouseSaveforOiidAsync(oiid, tdate, vtype, null);
        }
        
        /// <remarks/>
        public void GetWarehouseSaveforOiidAsync(int oiid, string tdate, string vtype, object userState) {
            if ((this.GetWarehouseSaveforOiidOperationCompleted == null)) {
                this.GetWarehouseSaveforOiidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWarehouseSaveforOiidOperationCompleted);
            }
            this.InvokeAsync("GetWarehouseSaveforOiid", new object[] {
                        oiid,
                        tdate,
                        vtype}, this.GetWarehouseSaveforOiidOperationCompleted, userState);
        }
        
        private void OnGetWarehouseSaveforOiidOperationCompleted(object arg) {
            if ((this.GetWarehouseSaveforOiidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWarehouseSaveforOiidCompleted(this, new GetWarehouseSaveforOiidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSaleProgress", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSaleProgress(string tdate) {
            object[] results = this.Invoke("GetSaleProgress", new object[] {
                        tdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSaleProgressAsync(string tdate) {
            this.GetSaleProgressAsync(tdate, null);
        }
        
        /// <remarks/>
        public void GetSaleProgressAsync(string tdate, object userState) {
            if ((this.GetSaleProgressOperationCompleted == null)) {
                this.GetSaleProgressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSaleProgressOperationCompleted);
            }
            this.InvokeAsync("GetSaleProgress", new object[] {
                        tdate}, this.GetSaleProgressOperationCompleted, userState);
        }
        
        private void OnGetSaleProgressOperationCompleted(object arg) {
            if ((this.GetSaleProgressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSaleProgressCompleted(this, new GetSaleProgressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSaleProgressforOiid", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetSaleProgressforOiid(int oiid, string tdate, string vtype) {
            object[] results = this.Invoke("GetSaleProgressforOiid", new object[] {
                        oiid,
                        tdate,
                        vtype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetSaleProgressforOiidAsync(int oiid, string tdate, string vtype) {
            this.GetSaleProgressforOiidAsync(oiid, tdate, vtype, null);
        }
        
        /// <remarks/>
        public void GetSaleProgressforOiidAsync(int oiid, string tdate, string vtype, object userState) {
            if ((this.GetSaleProgressforOiidOperationCompleted == null)) {
                this.GetSaleProgressforOiidOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSaleProgressforOiidOperationCompleted);
            }
            this.InvokeAsync("GetSaleProgressforOiid", new object[] {
                        oiid,
                        tdate,
                        vtype}, this.GetSaleProgressforOiidOperationCompleted, userState);
        }
        
        private void OnGetSaleProgressforOiidOperationCompleted(object arg) {
            if ((this.GetSaleProgressforOiidCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSaleProgressforOiidCompleted(this, new GetSaleProgressforOiidCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddUserCoupleBack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddUserCoupleBack(string usern, string ftext, string lxphone) {
            object[] results = this.Invoke("AddUserCoupleBack", new object[] {
                        usern,
                        ftext,
                        lxphone});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserCoupleBackAsync(string usern, string ftext, string lxphone) {
            this.AddUserCoupleBackAsync(usern, ftext, lxphone, null);
        }
        
        /// <remarks/>
        public void AddUserCoupleBackAsync(string usern, string ftext, string lxphone, object userState) {
            if ((this.AddUserCoupleBackOperationCompleted == null)) {
                this.AddUserCoupleBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserCoupleBackOperationCompleted);
            }
            this.InvokeAsync("AddUserCoupleBack", new object[] {
                        usern,
                        ftext,
                        lxphone}, this.AddUserCoupleBackOperationCompleted, userState);
        }
        
        private void OnAddUserCoupleBackOperationCompleted(object arg) {
            if ((this.AddUserCoupleBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserCoupleBackCompleted(this, new AddUserCoupleBackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddReplyUserFeedBack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AddReplyUserFeedBack(string fkid, string hftext, string repname) {
            object[] results = this.Invoke("AddReplyUserFeedBack", new object[] {
                        fkid,
                        hftext,
                        repname});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AddReplyUserFeedBackAsync(string fkid, string hftext, string repname) {
            this.AddReplyUserFeedBackAsync(fkid, hftext, repname, null);
        }
        
        /// <remarks/>
        public void AddReplyUserFeedBackAsync(string fkid, string hftext, string repname, object userState) {
            if ((this.AddReplyUserFeedBackOperationCompleted == null)) {
                this.AddReplyUserFeedBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddReplyUserFeedBackOperationCompleted);
            }
            this.InvokeAsync("AddReplyUserFeedBack", new object[] {
                        fkid,
                        hftext,
                        repname}, this.AddReplyUserFeedBackOperationCompleted, userState);
        }
        
        private void OnAddReplyUserFeedBackOperationCompleted(object arg) {
            if ((this.AddReplyUserFeedBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddReplyUserFeedBackCompleted(this, new AddReplyUserFeedBackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserCoupleBack", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetUserCoupleBack(string uname, int starindex, int pagesize) {
            object[] results = this.Invoke("GetUserCoupleBack", new object[] {
                        uname,
                        starindex,
                        pagesize});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserCoupleBackAsync(string uname, int starindex, int pagesize) {
            this.GetUserCoupleBackAsync(uname, starindex, pagesize, null);
        }
        
        /// <remarks/>
        public void GetUserCoupleBackAsync(string uname, int starindex, int pagesize, object userState) {
            if ((this.GetUserCoupleBackOperationCompleted == null)) {
                this.GetUserCoupleBackOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserCoupleBackOperationCompleted);
            }
            this.InvokeAsync("GetUserCoupleBack", new object[] {
                        uname,
                        starindex,
                        pagesize}, this.GetUserCoupleBackOperationCompleted, userState);
        }
        
        private void OnGetUserCoupleBackOperationCompleted(object arg) {
            if ((this.GetUserCoupleBackCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserCoupleBackCompleted(this, new GetUserCoupleBackCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetEntPlangoodsInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetEntPlangoodsInfo(string entid, int ntype, string datestr) {
            object[] results = this.Invoke("GetEntPlangoodsInfo", new object[] {
                        entid,
                        ntype,
                        datestr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetEntPlangoodsInfoAsync(string entid, int ntype, string datestr) {
            this.GetEntPlangoodsInfoAsync(entid, ntype, datestr, null);
        }
        
        /// <remarks/>
        public void GetEntPlangoodsInfoAsync(string entid, int ntype, string datestr, object userState) {
            if ((this.GetEntPlangoodsInfoOperationCompleted == null)) {
                this.GetEntPlangoodsInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetEntPlangoodsInfoOperationCompleted);
            }
            this.InvokeAsync("GetEntPlangoodsInfo", new object[] {
                        entid,
                        ntype,
                        datestr}, this.GetEntPlangoodsInfoOperationCompleted, userState);
        }
        
        private void OnGetEntPlangoodsInfoOperationCompleted(object arg) {
            if ((this.GetEntPlangoodsInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetEntPlangoodsInfoCompleted(this, new GetEntPlangoodsInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetCcApYjInfoForIphone", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetCcApYjInfoForIphone(string entid, int ntype, string datestr) {
            object[] results = this.Invoke("GetCcApYjInfoForIphone", new object[] {
                        entid,
                        ntype,
                        datestr});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetCcApYjInfoForIphoneAsync(string entid, int ntype, string datestr) {
            this.GetCcApYjInfoForIphoneAsync(entid, ntype, datestr, null);
        }
        
        /// <remarks/>
        public void GetCcApYjInfoForIphoneAsync(string entid, int ntype, string datestr, object userState) {
            if ((this.GetCcApYjInfoForIphoneOperationCompleted == null)) {
                this.GetCcApYjInfoForIphoneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCcApYjInfoForIphoneOperationCompleted);
            }
            this.InvokeAsync("GetCcApYjInfoForIphone", new object[] {
                        entid,
                        ntype,
                        datestr}, this.GetCcApYjInfoForIphoneOperationCompleted, userState);
        }
        
        private void OnGetCcApYjInfoForIphoneOperationCompleted(object arg) {
            if ((this.GetCcApYjInfoForIphoneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCcApYjInfoForIphoneCompleted(this, new GetCcApYjInfoForIphoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetYjInfoNextForclient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetYjInfoNextForclient(string eid, string tdate) {
            object[] results = this.Invoke("GetYjInfoNextForclient", new object[] {
                        eid,
                        tdate});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetYjInfoNextForclientAsync(string eid, string tdate) {
            this.GetYjInfoNextForclientAsync(eid, tdate, null);
        }
        
        /// <remarks/>
        public void GetYjInfoNextForclientAsync(string eid, string tdate, object userState) {
            if ((this.GetYjInfoNextForclientOperationCompleted == null)) {
                this.GetYjInfoNextForclientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYjInfoNextForclientOperationCompleted);
            }
            this.InvokeAsync("GetYjInfoNextForclient", new object[] {
                        eid,
                        tdate}, this.GetYjInfoNextForclientOperationCompleted, userState);
        }
        
        private void OnGetYjInfoNextForclientOperationCompleted(object arg) {
            if ((this.GetYjInfoNextForclientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYjInfoNextForclientCompleted(this, new GetYjInfoNextForclientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("MySoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetYjInfoNextForvtypeclient", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetYjInfoNextForvtypeclient(string eid, string tdate, string vtype) {
            object[] results = this.Invoke("GetYjInfoNextForvtypeclient", new object[] {
                        eid,
                        tdate,
                        vtype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetYjInfoNextForvtypeclientAsync(string eid, string tdate, string vtype) {
            this.GetYjInfoNextForvtypeclientAsync(eid, tdate, vtype, null);
        }
        
        /// <remarks/>
        public void GetYjInfoNextForvtypeclientAsync(string eid, string tdate, string vtype, object userState) {
            if ((this.GetYjInfoNextForvtypeclientOperationCompleted == null)) {
                this.GetYjInfoNextForvtypeclientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetYjInfoNextForvtypeclientOperationCompleted);
            }
            this.InvokeAsync("GetYjInfoNextForvtypeclient", new object[] {
                        eid,
                        tdate,
                        vtype}, this.GetYjInfoNextForvtypeclientOperationCompleted, userState);
        }
        
        private void OnGetYjInfoNextForvtypeclientOperationCompleted(object arg) {
            if ((this.GetYjInfoNextForvtypeclientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetYjInfoNextForvtypeclientCompleted(this, new GetYjInfoNextForvtypeclientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3163.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://tempuri.org/", IsNullable=false)]
    public partial class MySoapHeader : System.Web.Services.Protocols.SoapHeader {
        
        private string unarrayField;
        
        private System.Xml.XmlAttribute[] anyAttrField;
        
        /// <remarks/>
        public string Unarray {
            get {
                return this.unarrayField;
            }
            set {
                this.unarrayField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlAnyAttributeAttribute()]
        public System.Xml.XmlAttribute[] AnyAttr {
            get {
                return this.anyAttrField;
            }
            set {
                this.anyAttrField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void HelloWorldCompletedEventHandler(object sender, HelloWorldCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class HelloWorldCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal HelloWorldCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void UserLoginCompletedEventHandler(object sender, UserLoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UserLoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UserLoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetHistoryCompletedEventHandler(object sender, GetHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetMapUrlCompletedEventHandler(object sender, GetMapUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetMapUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetMapUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetAPKUrlCompletedEventHandler(object sender, GetAPKUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAPKUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAPKUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetNotificationCountCompletedEventHandler(object sender, GetNotificationCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNotificationCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNotificationCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetUserSendMessageCompletedEventHandler(object sender, GetUserSendMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserSendMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserSendMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void SetMessageStateCompletedEventHandler(object sender, SetMessageStateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetMessageStateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetMessageStateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetShipForjwdCompletedEventHandler(object sender, GetShipForjwdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetShipForjwdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetShipForjwdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void SearchShipOROilAdressCompletedEventHandler(object sender, SearchShipOROilAdressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchShipOROilAdressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchShipOROilAdressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetOildepotInfoCompletedEventHandler(object sender, GetOildepotInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOildepotInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOildepotInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetRefineryInfoCompletedEventHandler(object sender, GetRefineryInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRefineryInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRefineryInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetTransportationInfoCompletedEventHandler(object sender, GetTransportationInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransportationInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransportationInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetYjInfoForclientCompletedEventHandler(object sender, GetYjInfoForclientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYjInfoForclientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYjInfoForclientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetYjInfoForIphoneCompletedEventHandler(object sender, GetYjInfoForIphoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYjInfoForIphoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYjInfoForIphoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetYjInfoCompletedEventHandler(object sender, GetYjInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYjInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYjInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetAllYkCompletedEventHandler(object sender, GetAllYkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllYkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllYkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetProgressAllYkCompletedEventHandler(object sender, GetProgressAllYkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProgressAllYkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProgressAllYkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetPlangoodAllYkCompletedEventHandler(object sender, GetPlangoodAllYkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPlangoodAllYkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPlangoodAllYkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetdatielYkCompletedEventHandler(object sender, GetdatielYkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetdatielYkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetdatielYkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetAllYjProgressInfoForVarietytypeCompletedEventHandler(object sender, GetAllYjProgressInfoForVarietytypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllYjProgressInfoForVarietytypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllYjProgressInfoForVarietytypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetKcYjInfoForIphoneCompletedEventHandler(object sender, GetKcYjInfoForIphoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetKcYjInfoForIphoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetKcYjInfoForIphoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetYjWarehouseSaveInfoForEidCompletedEventHandler(object sender, GetYjWarehouseSaveInfoForEidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYjWarehouseSaveInfoForEidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYjWarehouseSaveInfoForEidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetCcYjInfoForIphoneCompletedEventHandler(object sender, GetCcYjInfoForIphoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCcYjInfoForIphoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCcYjInfoForIphoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetYjProgressInfoForEidCompletedEventHandler(object sender, GetYjProgressInfoForEidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYjProgressInfoForEidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYjProgressInfoForEidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetYjWarehouseSaveInfoForVarietytypeCompletedEventHandler(object sender, GetYjWarehouseSaveInfoForVarietytypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYjWarehouseSaveInfoForVarietytypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYjWarehouseSaveInfoForVarietytypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetYjProgressInfoForVarietytypeCompletedEventHandler(object sender, GetYjProgressInfoForVarietytypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYjProgressInfoForVarietytypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYjProgressInfoForVarietytypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetTransportAuditCompletedEventHandler(object sender, GetTransportAuditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransportAuditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransportAuditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void CommitTransportAuditCompletedEventHandler(object sender, CommitTransportAuditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommitTransportAuditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitTransportAuditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetWaterTranAuditCompletedEventHandler(object sender, GetWaterTranAuditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWaterTranAuditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWaterTranAuditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetHCTranAuditCompletedEventHandler(object sender, GetHCTranAuditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetHCTranAuditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetHCTranAuditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void CommitDispatcherAuditCompletedEventHandler(object sender, CommitDispatcherAuditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommitDispatcherAuditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitDispatcherAuditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetDispatcherAuditCompletedEventHandler(object sender, GetDispatcherAuditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDispatcherAuditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDispatcherAuditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetWaterTranConfirmCompletedEventHandler(object sender, GetWaterTranConfirmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWaterTranConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWaterTranConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void CommitWaterTranConfirmCompletedEventHandler(object sender, CommitWaterTranConfirmCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommitWaterTranConfirmCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitWaterTranConfirmCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetWaterTranAlterPortCompletedEventHandler(object sender, GetWaterTranAlterPortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWaterTranAlterPortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWaterTranAlterPortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void CommitWaterTranAlterPortCompletedEventHandler(object sender, CommitWaterTranAlterPortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommitWaterTranAlterPortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitWaterTranAlterPortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetSendGoodstimeCompletedEventHandler(object sender, GetSendGoodstimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSendGoodstimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSendGoodstimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void CommitGoodsTimeCompletedEventHandler(object sender, CommitGoodsTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommitGoodsTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitGoodsTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void CommitAuditResultCompletedEventHandler(object sender, CommitAuditResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommitAuditResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitAuditResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void CommitHCJHAuditResultCompletedEventHandler(object sender, CommitHCJHAuditResultCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommitHCJHAuditResultCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitHCJHAuditResultCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetTransportCostReceiptCompletedEventHandler(object sender, GetTransportCostReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTransportCostReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTransportCostReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void CommitTransportCostReceiptCompletedEventHandler(object sender, CommitTransportCostReceiptCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CommitTransportCostReceiptCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CommitTransportCostReceiptCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetYJshowcolorInfoCompletedEventHandler(object sender, GetYJshowcolorInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYJshowcolorInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYJshowcolorInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetSendFactoryProgressCompletedEventHandler(object sender, GetSendFactoryProgressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSendFactoryProgressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSendFactoryProgressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetSendFactoryProgressforEntCompletedEventHandler(object sender, GetSendFactoryProgressforEntCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSendFactoryProgressforEntCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSendFactoryProgressforEntCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetWarehouseSaveCompletedEventHandler(object sender, GetWarehouseSaveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarehouseSaveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarehouseSaveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetWarehouseSaveByVtypeCompletedEventHandler(object sender, GetWarehouseSaveByVtypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarehouseSaveByVtypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarehouseSaveByVtypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetWarehouseSaveforSidCompletedEventHandler(object sender, GetWarehouseSaveforSidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarehouseSaveforSidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarehouseSaveforSidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetOildepotforSidCompletedEventHandler(object sender, GetOildepotforSidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOildepotforSidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOildepotforSidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetWarehouseSaveforOiidCompletedEventHandler(object sender, GetWarehouseSaveforOiidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWarehouseSaveforOiidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWarehouseSaveforOiidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetSaleProgressCompletedEventHandler(object sender, GetSaleProgressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSaleProgressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSaleProgressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetSaleProgressforOiidCompletedEventHandler(object sender, GetSaleProgressforOiidCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSaleProgressforOiidCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSaleProgressforOiidCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void AddUserCoupleBackCompletedEventHandler(object sender, AddUserCoupleBackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserCoupleBackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserCoupleBackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void AddReplyUserFeedBackCompletedEventHandler(object sender, AddReplyUserFeedBackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddReplyUserFeedBackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddReplyUserFeedBackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetUserCoupleBackCompletedEventHandler(object sender, GetUserCoupleBackCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserCoupleBackCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserCoupleBackCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetEntPlangoodsInfoCompletedEventHandler(object sender, GetEntPlangoodsInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetEntPlangoodsInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetEntPlangoodsInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetCcApYjInfoForIphoneCompletedEventHandler(object sender, GetCcApYjInfoForIphoneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCcApYjInfoForIphoneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCcApYjInfoForIphoneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetYjInfoNextForclientCompletedEventHandler(object sender, GetYjInfoNextForclientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYjInfoNextForclientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYjInfoNextForclientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    public delegate void GetYjInfoNextForvtypeclientCompletedEventHandler(object sender, GetYjInfoNextForvtypeclientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.2558.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetYjInfoNextForvtypeclientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetYjInfoNextForvtypeclientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591